name: 'Push'
inputs:
  head_sha:
    required: true
  artifact_name:
    required: true
  artifact_image_file:
    required: true
  artifact_image_name:
    required: true
  registry:
    required: true
    default: ghcr.io
  repo:
    required: true
    default: ${{ github.repository }}
  tag:
    required: true
  username:
    required: true
    default: ${{ github.actor }}
  password:
    required: true
    default: ${{ github.token }}
outputs:
  image:
    value: ${{ steps.set_outputs.outputs.image }}
  url:
    value: ${{ steps.set_outputs.outputs.url }}
runs:
  using: "composite"
  steps:
    -
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.artifact_name }}
        path: /tmp/
    -
      shell: bash
      run: docker load -i /tmp/${{ inputs.artifact_image_file }}
    -
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    -
      shell: bash
      run: echo "IMAGE_ID=${{ inputs.registry }}/${{ inputs.repo }}:${{ inputs.tag }}" >> $GITHUB_ENV
    -
      shell: bash
      run: echo "IMAGE_URL=https://$IMAGE_ID" >> $GITHUB_ENV
    -
      if: ${{ inputs.registry == 'docker.io' }}
      shell: bash
      run: echo "IMAGE_URL=https://hub.docker.com/r/${{ inputs.repo }}/tags?name=${{ inputs.tag }}" >> $GITHUB_ENV
    -
      id: set_outputs
      shell: bash
      run: |
        echo "::set-output name=image::$IMAGE_ID"
        echo "::set-output name=url::$IMAGE_URL"
    -
      shell: bash
      run: |
        docker tag ${{ inputs.artifact_image_name }} $IMAGE_ID
        docker push $IMAGE_ID
    -
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: '${{ inputs.head_sha }}',
            state: 'success',
            context: context.workflow,
            target_url: '${{ env.IMAGE_URL }}',
            description: '${{ env.IMAGE_ID }}',
          });
