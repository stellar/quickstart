name: Dockerfile.dev

on:
  push:
    branches: master
  pull_request:
  schedule:
    # UTC: At 10:15 on every day-of-week from Monday through Friday.
    # UTC-8: At 02:15 on every day-of-week from Monday through Friday.
    - cron: '15 10 * * 1-5'

# Prevent more than one build of this workflow for a branch to be running at the
# same time, and if multiple are queued, only run the latest, cancelling any
# already running build. The exception being any protected branch, such as
# master, where a build for every commit will run.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_protected == 'true' && github.sha || github.ref }}
  cancel-in-progress: true

jobs:

  build-stellar-core:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@5146db6c4d81fbfd508899f851bbb3883a96ff9f
    - name: Build Stellar-Core Image
      run: docker buildx build -f docker/Dockerfile.testing -t stellar-core -o type=docker,dest=/tmp/image git://github.com/stellar/stellar-core#master --build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=true --build-arg CONFIGURE_FLAGS='--disable-tests'
    - name: Upload Stellar-Core Image
      uses: actions/upload-artifact@v2
      with:
        name: image-stellar-core
        path: /tmp/image

  build-stellar-horizon:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@5146db6c4d81fbfd508899f851bbb3883a96ff9f
    - name: Build Stellar-Horizon Image
      run: docker buildx build -f services/horizon/docker/Dockerfile.dev -t stellar-horizon -o type=docker,dest=/tmp/image git://github.com/stellar/go#master
    - name: Upload Stellar-Horizon Image
      uses: actions/upload-artifact@v2
      with:
        name: image-stellar-horizon
        path: /tmp/image

  build:
    needs: [build-stellar-core, build-stellar-horizon]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download Stellar-Core Image
      uses: actions/download-artifact@v2
      with:
        name: image-stellar-core
        path: /tmp/stellar-core
    - name: Download Stellar-Horizon Image
      uses: actions/download-artifact@v2
      with:
        name: image-stellar-horizon
        path: /tmp/stellar-horizon
    - name: Load Stellar-Core Image
      run: docker load -i /tmp/stellar-core/image
    - name: Load Stellar-Horizon Image
      run: docker load -i /tmp/stellar-horizon/image
    # Docker buildx cannot be used to build the dev quickstart image because
    # buildx does not yet support importing existing images, like the core and
    # horizon images above, into a buildx builder's cache. Buildx would be
    # preferred because it can output a smaller image file faster than docker
    # save can.  Once buildx supports it we can update.
    # https://github.com/docker/buildx/issues/847
    - name: Build Quickstart Image
      run: docker build -f Dockerfile.dev -t stellar/quickstart:dev . --build-arg STELLAR_CORE_IMAGE_REF=stellar-core --build-arg HORIZON_IMAGE_REF=stellar-horizon
    - name: Save Quickstart Image
      run: docker save stellar/quickstart:dev -o /tmp/image
    - name: Upload Quickstart Image
      uses: actions/upload-artifact@v2
      with:
        name: image-Dockerfile-dev
        path: /tmp/image

  test:
    needs: build
    strategy:
      matrix:
        network: [testnet, pubnet, standalone]
        options: ["", --enable-horizon-captive-core]
        exclude:
          - network: testnet
            options: --enable-horizon-captive-core
          - network: pubnet
            options: --enable-horizon-captive-core
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download Quickstart Image
      uses: actions/download-artifact@v2
      with:
        name: image-Dockerfile-dev
        path: /tmp/
    - name: Load Quickstart Image
      run: docker load -i /tmp/image
    - name: Run Quickstart Image
      run: docker run --rm -d -p "8000:8000" --name stellar stellar/quickstart:dev --${{ matrix.network }} ${{ matrix.options }}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1
    - name: Sleep until supervisor is up
      run: sleep 10
    - name: Run test
      run: |
        echo "supervisorctl tail -f stellar-core" | docker exec -i stellar sh &
        echo "supervisorctl tail -f horizon" | docker exec -i stellar sh &
        go run test.go
        curl http://localhost:8000
