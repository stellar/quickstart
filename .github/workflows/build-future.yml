name: Future

# The `:future` tag points to a build containing unreleased versions of
# software that have been informally released to the futurenet network.

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false
    inputs:
      sha:
        description: 'Sha to build'
        type: 'string'
        required: true
      tag-prefix:
        description: 'Prefix for the tag name'
        type: 'string'
        default: ''

jobs:

  amd64:
    uses: ./.github/workflows/build.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      sha: ${{ inputs.sha }}
      arch: amd64
      tag: ${{ inputs.tag-prefix }}future-amd64
      protocol_version_default: 22
      xdr_ref: v22.0.0
      core_ref: v22.0.0
      horizon_ref: horizon-v22.0.1
      stellar_rpc_ref: v22.1.1
      friendbot_ref: horizon-v22.0.1
      test_matrix: |
        {
          "network": ["local"],
          "core": ["core", null],
          "horizon": ["horizon", null],
          "rpc": ["rpc", null],
          "options": [""]
        }

  arm64:
    uses: ./.github/workflows/build.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      sha: ${{ inputs.sha }}
      arch: arm64
      tag: ${{ inputs.tag-prefix }}future-arm64
      protocol_version_default: 22
      xdr_ref: v22.0.0
      core_ref: v22.0.0
      horizon_ref: horizon-v22.0.1
      stellar_rpc_ref: v22.1.1
      friendbot_ref: horizon-v22.0.1
      test_matrix: |
        {
          "network": ["local"],
          "core": ["core", null],
          "horizon": ["horizon", null],
          "rpc": ["rpc", null],
          "options": [""]
        }

  manifest:
    needs: [amd64, arm64]
    uses: ./.github/workflows/manifest.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      tag: ${{ inputs.tag-prefix }}future
      tag-alias: future
      images: ${{ needs.amd64.outputs.image }} ${{ needs.arm64.outputs.image }}
