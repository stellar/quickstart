name: Action Test

on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag to use'
        type: 'string'
        default: ''

jobs:
  action-setup:
    runs-on: ubuntu-latest
    outputs:
      os: ${{ steps.os.outputs.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
      id: changes
      with:
        filters: |
          action:
          - 'action.yml'
    - uses: actions/github-script@v8
      id: os
      with:
        script: |
          const os = ['ubuntu-latest-16-cores'];
          if ('${{ steps.changes.outputs.action-changed }}' === 'true') {
            os.push('ubuntu-jammy-16-cores-arm64');
            os.push('macos-13');
          }
          core.setOutput('os', JSON.stringify(os));
        

  action-test:
    needs: action-setup
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.action-setup.outputs.os) }}
    runs-on: ${{ matrix.sys.os }}
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - uses: ./
      with:
        tag: ${{ inputs.tag }}
    - name: "Run basic test making sure RPC and Horizon are available"
      run: >
        RESP=`curl --no-progress-meter -X POST -H 'Content-Type: application/json' -d 
        '{"jsonrpc": "2.0", "id": 8675309, "method": "getLatestLedger"}' http://localhost:8000/rpc`
        
        echo "RPC getLatestLedger response: $RESP"

        echo "$RESP" | grep sequence
        
        RESP=`curl -i -o - --silent 'http://localhost:8000/ledgers?limit=1'
        -H 'Accept: application/json'`
        
        echo "Horizon ledgers response: $RESP"
        
        echo "$RESP" | grep "200 OK"
