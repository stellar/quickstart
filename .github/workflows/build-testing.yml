name: Testing

# The `:testing` tag should only ever be formally released or release candidate
# versions of software. That means each ref should only ever be specified as a
# version tag for software that's either the latest release candidate or latest
# release.

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false
    inputs:
      sha:
        description: 'Sha to build'
        type: 'string'
        required: true
      tag-prefix:
        description: 'Prefix for the tag name'
        type: 'string'
        default: ''
      tag-alias-prefix:
        description: 'Prefix for the alias tag name'
        type: 'string'
        default: ''

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      protocol_version_default: ${{ steps.versions.outputs.protocol_version_default }}
      xdr_ref: ${{ steps.versions.outputs.xdr_ref }}
      core_ref: ${{ steps.versions.outputs.core_ref }}
      horizon_ref: ${{ steps.versions.outputs.horizon_ref }}
      stellar_rpc_ref: ${{ steps.versions.outputs.stellar_rpc_ref }}
      friendbot_ref: ${{ steps.versions.outputs.friendbot_ref }}
      lab_ref: ${{ steps.versions.outputs.lab_ref }}
      test_matrix: ${{ steps.versions.outputs.test_matrix }}
    steps:
    - uses: actions/checkout@v2
    - id: versions
      run: |
        echo "protocol_version_default=$(jq -r '.testing.protocol_version_default' images.json)" >> $GITHUB_OUTPUT
        echo "xdr_ref=$(jq -r '.testing.xdr_ref' images.json)" >> $GITHUB_OUTPUT
        echo "core_ref=$(jq -r '.testing.core_ref' images.json)" >> $GITHUB_OUTPUT
        echo "horizon_ref=$(jq -r '.testing.horizon_ref' images.json)" >> $GITHUB_OUTPUT
        echo "stellar_rpc_ref=$(jq -r '.testing.stellar_rpc_ref' images.json)" >> $GITHUB_OUTPUT
        echo "friendbot_ref=$(jq -r '.testing.friendbot_ref' images.json)" >> $GITHUB_OUTPUT
        echo "lab_ref=$(jq -r '.testing.lab_ref' images.json)" >> $GITHUB_OUTPUT
        echo "test_matrix<<EOF" >> $GITHUB_OUTPUT
        jq -r '.testing.test_matrix' images.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

  amd64:
    needs: [setup]
    uses: ./.github/workflows/build.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      sha: ${{ inputs.sha }}
      arch: amd64
      tag: ${{ inputs.tag-prefix }}testing-amd64
      protocol_version_default: ${{ needs.setup.outputs.protocol_version_default }}
      xdr_ref: ${{ needs.setup.outputs.xdr_ref }}
      core_ref: ${{ needs.setup.outputs.core_ref }}
      horizon_ref: ${{ needs.setup.outputs.horizon_ref }}
      stellar_rpc_ref: ${{ needs.setup.outputs.stellar_rpc_ref }}
      friendbot_ref: ${{ needs.setup.outputs.friendbot_ref }}
      lab_ref: ${{ needs.setup.outputs.lab_ref }}
      test_matrix: ${{ needs.setup.outputs.test_matrix }}

  arm64:
    needs: [setup]
    uses: ./.github/workflows/build.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      sha: ${{ inputs.sha }}
      arch: arm64
      tag: ${{ inputs.tag-prefix }}testing-arm64
      protocol_version_default: ${{ needs.setup.outputs.protocol_version_default }}
      xdr_ref: ${{ needs.setup.outputs.xdr_ref }}
      core_ref: ${{ needs.setup.outputs.core_ref }}
      horizon_ref: ${{ needs.setup.outputs.horizon_ref }}
      stellar_rpc_ref: ${{ needs.setup.outputs.stellar_rpc_ref }}
      friendbot_ref: ${{ needs.setup.outputs.friendbot_ref }}
      lab_ref: ${{ needs.setup.outputs.lab_ref }}
      test_matrix: ${{ needs.setup.outputs.test_matrix }}

  manifest:
    needs: [amd64, arm64]
    uses: ./.github/workflows/manifest.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    with:
      tag: ${{ inputs.tag-prefix }}testing
      tag-alias: ${{ inputs.tag-alias-prefix }}testing
      images: ${{ needs.amd64.outputs.image }} ${{ needs.arm64.outputs.image }}
