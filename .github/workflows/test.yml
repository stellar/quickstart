name: Test

on:
  push:
    branches: master
  pull_request:

jobs:

  build:
    strategy:
      matrix:
        dockerfile: [Dockerfile, Dockerfile.testing]
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
    - uses: actions/checkout@v2

    - name: Create directory for docker images
      run: mkdir -p /tmp/docker-images

    - name: Build Quickstart Image
      run: docker build -f ${{ matrix.dockerfile }} -t stellar/quickstart:${{ matrix.dockerfile }} -o type=tar,dest=/tmp/docker-images/stellar-quickstart-${{ matrix.dockerfile }} .

    - name: Upload Quickstart Image
      uses: actions/upload-artifact@v2
      with:
        name: docker-images
        path: /tmp/docker-images

  test:
    needs: build
    strategy:
      matrix:
        network: [testnet, pubnet, standalone]
        dockerfile: [Dockerfile, Dockerfile.testing]
        options: ["", --enable-horizon-captive-core]
        exclude:
          - network: testnet
            options: --enable-horizon-captive-core
          - network: pubnet
            options: --enable-horizon-captive-core
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: docker-images
        path: /tmp/docker-images

    - name: Load image
      run: docker import /tmp/docker-images/stellar-quickstart-${{ matrix.dockerfile }} stellar/quickstart:${{ matrix.dockerfile }}

    - name: Run Quickstart Image
      run: docker run --rm -d -p "8000:8000" --name stellar stellar/quickstart:${{ matrix.dockerfile }} --${{ matrix.network }} ${{ matrix.options }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1

    - name: Sleep until supervisor is up
      run: sleep 10

    - name: Run test
      run: |
        echo "supervisorctl tail -f stellar-core" | docker exec -i stellar sh &
        echo "supervisorctl tail -f horizon" | docker exec -i stellar sh &
        go run test.go
        curl http://localhost:8000
