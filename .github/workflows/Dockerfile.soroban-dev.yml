name: Dockerfile.image-Dockerfile-soroban-dev

on:
  push:
    branches:
    - master
  pull_request:

# Prevent more than one build of this workflow for a branch to be running at the
# same time, and if multiple are queued, only run the latest, cancelling any
# already running build. The exception being any protected branch, such as
# master, where a build for every commit will run.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_protected == 'true' && github.sha || github.ref }}
  cancel-in-progress: true

env:
  HEAD_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
  IMAGE: ${{ format('{0}/{1}:{2}', secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io', github.repository, github.event_name == 'pull_request' && format('pr-{0}-soroban-dev', github.event.pull_request.number) || 'soroban-dev') }}

jobs:
  complete:
    if: always()
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.HEAD_SHA }}
    - uses: docker/setup-buildx-action@5146db6c4d81fbfd508899f851bbb3883a96ff9f
    - name: Build Quickstart Image
      run: docker buildx build --no-cache -f Dockerfile.soroban-dev -t $IMAGE --label org.opencontainers.image.revision="${{ env.HEAD_SHA }}" -o type=docker,dest=/tmp/image .
    - name: Upload Quickstart Image
      uses: actions/upload-artifact@v2
      with:
        name: image-Dockerfile-soroban-dev
        path: /tmp/image

  test:
    needs: build
    strategy:
      matrix:
        network: [testnet, pubnet, standalone, futurenet]
        options: ["", "--enable-horizon-captive-core", "--enable-soroban-rpc", "--enable-horizon-captive-core --enable-soroban-rpc"]
        exclude:
          - network: testnet
            options: "--enable-horizon-captive-core"
          - network: testnet
            options: "--enable-soroban-rpc"  
          - network: testnet
            options: "--enable-horizon-captive-core --enable-soroban-rpc" 
          - network: pubnet
            options: "--enable-horizon-captive-core"
          - network: pubnet
            options: "--enable-soroban-rpc"  
          - network: pubnet
            options: "--enable-horizon-captive-core --enable-soroban-rpc"
          - network: futurenet
            options: "--enable-horizon-captive-core"
          - network: futurenet
            options: "--enable-horizon-captive-core --enable-soroban-rpc"  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.HEAD_SHA }}
    - name: Download Quickstart Image
      uses: actions/download-artifact@v2
      with:
        name: image-Dockerfile-soroban-dev
        path: /tmp/
    - name: Load Quickstart Image
      run: docker load -i /tmp/image
    - name: Run Quickstart Image
      run: docker run --rm -d -p "8000:8000" -p "11626:11626" --name stellar $IMAGE --${{ matrix.network }} ${{ matrix.options }}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1
    - name: Sleep until supervisor is up
      run: sleep 10
    - name: Run core test
      run: |
        echo "supervisorctl tail -f stellar-core" | docker exec -i stellar sh &
        go run test_core.go
        curl http://localhost:11626/info
    - name: Run horizon up test
      run: |
        echo "supervisorctl tail -f horizon" | docker exec -i stellar sh &
        go run test_horizon_up.go
        curl http://localhost:8000
    - name: Run horizon ingesting test
      if: ${{ matrix.network != 'pubnet' }}
      run: |
        echo "supervisorctl tail -f stellar-core" | docker exec -i stellar sh &
        echo "supervisorctl tail -f horizon" | docker exec -i stellar sh &
        go run test_horizon_ingesting.go
        curl http://localhost:8000
    - name: Run friendbot test
      if: ${{ matrix.network == 'standalone' }}
      run: |
        echo "supervisorctl tail -f friendbot" | docker exec -i stellar sh &
        go run test_friendbot.go     
    - name: Run soroban rpc test
      if: ${{ contains(matrix.options, '--enable-soroban-rpc') }}
      run: |
        echo "supervisorctl tail -f soroban-rpc" | docker exec -i stellar sh &
        go run test_soroban_rpc_up.go    

  push:
    # Push image to registry after build for pull requests from a local branch.
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
    needs: build
    permissions:
      packages: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.HEAD_SHA  }}
    - id: push
      uses: ./.github/actions/push
      with:
        head_sha: ${{ env.HEAD_SHA }}
        artifact_name: image-Dockerfile-soroban-dev
        artifact_image_file: image
        image: ${{ env.IMAGE }}
        registry: ${{ secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io' }}
        username: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN || github.token }}

  push-after-test:
    # Push image to registry after test for master.
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs: [build, test]
    permissions:
      packages: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ env.HEAD_SHA  }}
    - id: push
      uses: ./.github/actions/push
      with:
        head_sha: ${{ env.HEAD_SHA }}
        artifact_name: image-Dockerfile-soroban-dev
        artifact_image_file: image
        image: ${{ env.IMAGE }}
        registry: ${{ secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io' }}
        username: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN || github.token }}
