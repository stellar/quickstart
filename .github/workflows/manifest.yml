on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false
    inputs:
      tag:
        description: 'Tag to use as the manifest list image name'
        type: 'string'
        required: true
      tag-alias:
        description: 'Tag to alias to the tag of the manifest, e.g. "latest"'
        type: 'string'
        required: true
      images:
        description: 'Space separated list of images to include in the manifest list'
        type: 'string'
        required: true
    outputs:
      image:
        description: 'Image pushed as a result of this build'
        value: ${{ jobs.build.outputs.image }}

env:
  HEAD_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
  IMAGE: ${{ format('{0}/{1}:{2}', secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io', github.repository, github.event_name == 'pull_request' && format('pr{0}-{1}', github.event.pull_request.number, inputs.tag) || inputs.tag) }}
  IMAGE_ALIAS: ${{ format('{0}/{1}:{2}', secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io', github.repository, github.event_name == 'pull_request' && format('pr{0}-{1}', github.event.pull_request.number, inputs.tag-alias) || inputs.tag-alias) }}
  REGISTRY: ${{ secrets.DOCKERHUB_TOKEN && 'docker.io' || 'ghcr.io' }}

jobs:

  push:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    permissions:
      packages: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
    - id: image_parts
      run: |
        IMAGE_TAGLESS=$(echo ${{ env.IMAGE }} | cut -d':' -f1)
        IMAGE_REPO=$(echo $IMAGE_TAGLESS | cut -d'/' -f2,3)
        IMAGE_TAG=$(echo ${{ env.IMAGE }} | cut -d':' -f2)
        echo "::set-output name=repo::$IMAGE_REPO"
        echo "::set-output name=tag::$IMAGE_TAG"
    - uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN || github.token }}
    - run: echo "IMAGE_URL=https://${{ env.IMAGE }}" >> $GITHUB_ENV
    - if: ${{ env.REGISTRY == 'docker.io' }}
      run: |
        echo "IMAGE_URL=https://hub.docker.com/r/${{ steps.image_parts.outputs.repo }}/tags?name=${{ steps.image_parts.outputs.tag }}" >> $GITHUB_ENV
    - run: |
        docker manifest create ${{ env.IMAGE }} ${{ inputs.images }}
    - run: |
        docker manifest push ${{ env.IMAGE }}
    - run: |
        docker buildx imagetools create -t ${{ env.IMAGE_ALIAS }} ${{ env.IMAGE }}
    - uses: actions/github-script@v5
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: '${{ env.HEAD_SHA }}',
            state: 'success',
            context: `${{ env.IMAGE }}`,
            target_url: '${{ env.IMAGE_URL }}',
            description: 'Available',
          });
