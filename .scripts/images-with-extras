#!/usr/bin/env python3

import json
import sys
import subprocess
import hashlib

# Accepts as stdin a JSON object in the format of images.json.
# And adds some calculatble elements used during the build.
#
# 1. Resolves any 'ref' values in the JSON to a revision sha. 
# 2. Hashes the entire dep details and injects the hash as an id into the deps
#    details. The id can be used to uniquely identify a dep configuration.
#
# Outputs the original JSON modified.
#
# Usage: < images.json ./.scripts/images-with-extras

images = json.load(sys.stdin)

cache = {}

for image in images:
    tag = image["tag"]
    for dep in image["deps"]:
        name = dep["name"]
        repo = dep["repo"]
        ref = dep["ref"]
        print(f"{tag} {name} {repo} {ref} ...", file=sys.stderr)
        key = (name, repo, ref)
        if key in cache:
            sha = cache[key]
        else:
            sha = subprocess.run(
                ["gh", "api", f"repos/{repo}/commits/{ref}", "--jq", ".sha"],
                capture_output=True,
                text=True,
                check=True
            ).stdout.strip()
            cache[key] = sha
        print(f" • revision sha = {sha}", file=sys.stderr)
        dep["sha"] = sha

        dep_str = json.dumps(dep, separators=(',', ':'))
        id = hashlib.sha256(dep_str.encode()).hexdigest()
        dep["id"] = id
        print(f" • id = {id}", file=sys.stderr)

print(json.dumps(images, separators=(',', ':')))
